{"componentChunkName":"component---src-templates-blog-post-js","path":"/nodejs-logging/logging-in-nodejs/","result":{"data":{"site":{"siteMetadata":{"title":"Tech Notes and some other stuff"}},"markdownRemark":{"id":"53c3670e-7419-582d-80d3-80fcfeb3c4b4","excerpt":"One of the main package used for logging in nodejs apps is log4js. log4js Out of the box it supports the following features: coloured console logging to stdout…","html":"<p>One of the main package used for logging in nodejs apps is <a href=\"https://www.npmjs.com/package/log4js\">log4js</a>.</p>\n<p><strong>log4js</strong></p>\n<p>Out of the box it supports the following features:</p>\n<ul>\n<li>coloured console logging to stdout or stderr</li>\n<li>file appender, with configurable log rolling based on file size or date</li>\n<li>a logger for connect/express servers</li>\n<li>configurable log message layout/patterns</li>\n<li>different log levels for different log categories (make some parts of your app log as DEBUG, others only ERRORS, etc.)</li>\n</ul>\n<p><strong>Usage</strong>\nMinimalist version\nvar log4js = require(‘log4js’);\nvar logger = log4js.getLogger();\nlogger.level = ‘debug’; // default level is OFF - which means no logs at all.\nlogger.debug(“Some debug messages”);</p>\n<p><a href=\"https://log4js-node.github.io/log4js-node/api.html\">Setting level, category, appenders</a></p>","frontmatter":{"title":"Logging in nodejs","date":"January 22, 2020","description":"Logging in nodejs applications"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/nodejs-logging/logging-in-nodejs/","previous":{"fields":{"slug":"/GraphQL/graphql/"},"frontmatter":{"title":"Getting started with GraphQL"}},"next":null}}}